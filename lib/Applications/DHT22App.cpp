#include <DHT22App.h>

#define DHTTYPE DHT11
#define DHTPIN 2
bool TH;;

static const uint16_t temp[]PROGMEM {0x0, 0x0, 0xf800, 0xf800, 0xf800, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf800, 0x1f, 0xf800, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf800, 0x1f, 0xf800, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf800, 0x1f, 0xf800, 0x0, 0x0, 0x0, 0x0, 0xf800, 0xf800, 0x1f, 0xf800, 0xf800, 0x0, 0x0, 0x0, 0xf800, 0x1f, 0x1f, 0x1f, 0xf800, 0x0, 0x0, 0x0, 0xf800, 0x1f, 0x1f, 0x1f, 0xf800, 0x0, 0x0, 0x0, 0x0, 0xf800, 0xf800, 0xf800, 0x0, 0x0, 0x0 };
static const uint16_t hum[]PROGMEM {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1f, 0x1f, 0x1f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1f, 0x1f, 0x1f, 0x1f, 0x0, 0x0, 0x0, 0x0, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x0, 0x0, 0x0, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x0, 0x0, 0x0, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x0, 0x0, 0x0, 0x0, 0x1f, 0x1f, 0x1f, 0x0, 0x0, 0x0 };

DHT22App::DHT22App() : dht(DHTPIN, DHTTYPE) {
    dht.begin();
}

void DHT22App::render(DisplayManager& display) {
    if (TH){
        display.drawApp(temp,String(temperature)+ "\xA7",{0,0},{255, 255, 255},true,30,200);
    }else{
        display.drawApp(hum,String(humidity)+ "%",{0,0},{255, 255, 255},true,30,200);
    } 
    
}


void DHT22App::update() {
    humidity = (int)dht.readHumidity(false);
    temperature = (int)dht.readTemperature(false);
    
}

void DHT22App::enable() {
    update();
    TH=!TH;
}
 


